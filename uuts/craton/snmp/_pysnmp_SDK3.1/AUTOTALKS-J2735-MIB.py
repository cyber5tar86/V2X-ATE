# PySNMP SMI module. Autogenerated from smidump -f python AUTOTALKS-J2735-MIB
# by libsmi2pysnmp-0.1.3 at Sun Sep 29 09:49:23 2013,
# Python version sys.version_info(major=2, minor=7, micro=3, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( atlkMgmt, ) = mibBuilder.importSymbols("AUTOTALKS-REG", "atlkMgmt")
( InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue")

# Objects

j2735Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 38405, 1, 4)).setRevisions(("2013-04-21 00:00","2012-12-19 00:00",))
if mibBuilder.loadTexts: j2735Mib.setOrganization("Autotalks")
if mibBuilder.loadTexts: j2735Mib.setContactInfo("Grand Netter Building\nPOB 3846, Kfar-Netter 40593, Israel\nPhone: (+972)-9-886-5300\nFax:   (+972)-9-886-5301\ninfo@auto-talks.com")
if mibBuilder.loadTexts: j2735Mib.setDescription("Autotalks Ltd. SMIv2 MIB for functionality defined by\nSAE J2735 and includes extensions not required by the\nstandard.")
j2735Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 4, 1))
j2735Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 4, 1, 1))
j2735Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 4, 1, 2))
j2735Bsm = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 4, 2))
j2735BsmTxPeriod = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 4, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000))).setMaxAccess("readwrite").setUnits("milliseconds")
if mibBuilder.loadTexts: j2735BsmTxPeriod.setDescription("Time period between sequential BSM transmissions.")
j2735BsmTxIf = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 4, 2, 2), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: j2735BsmTxIf.setDescription("MAC interface used for BSM transmission.")
j2735BsmTxEnabled = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 4, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: j2735BsmTxEnabled.setDescription("Whether BSM transmission is enabled.")
j2735BsmSafetyExtTxRatio = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 4, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: j2735BsmSafetyExtTxRatio.setDescription("At least once per this many BSM transmissions the Vehicle Safety\nExtension is included.")
j2735BsmSecEnabled = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 4, 2, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: j2735BsmSecEnabled.setDescription("Whether IEEE 1609.2 security is enabled.")

# Augmentions

# Groups

j2735MibGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 38405, 1, 4, 1, 1, 1)).setObjects(*(("AUTOTALKS-J2735-MIB", "j2735BsmSecEnabled"), ("AUTOTALKS-J2735-MIB", "j2735BsmSafetyExtTxRatio"), ("AUTOTALKS-J2735-MIB", "j2735BsmTxEnabled"), ("AUTOTALKS-J2735-MIB", "j2735BsmTxPeriod"), ("AUTOTALKS-J2735-MIB", "j2735BsmTxIf"), ) )
if mibBuilder.loadTexts: j2735MibGroup.setDescription("All objects in AUTOTALKS-J2735-MIB")

# Compliances

j2735Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 38405, 1, 4, 1, 2, 1)).setObjects(*(("AUTOTALKS-J2735-MIB", "j2735MibGroup"), ) )
if mibBuilder.loadTexts: j2735Compliance.setDescription("Compliance statement covering entire AUTOTALKS-J2735-MIB")

# Exports

# Module identity
mibBuilder.exportSymbols("AUTOTALKS-J2735-MIB", PYSNMP_MODULE_ID=j2735Mib)

# Objects
mibBuilder.exportSymbols("AUTOTALKS-J2735-MIB", j2735Mib=j2735Mib, j2735Conformance=j2735Conformance, j2735Groups=j2735Groups, j2735Compliances=j2735Compliances, j2735Bsm=j2735Bsm, j2735BsmTxPeriod=j2735BsmTxPeriod, j2735BsmTxIf=j2735BsmTxIf, j2735BsmTxEnabled=j2735BsmTxEnabled, j2735BsmSafetyExtTxRatio=j2735BsmSafetyExtTxRatio, j2735BsmSecEnabled=j2735BsmSecEnabled)

# Groups
mibBuilder.exportSymbols("AUTOTALKS-J2735-MIB", j2735MibGroup=j2735MibGroup)

# Compliances
mibBuilder.exportSymbols("AUTOTALKS-J2735-MIB", j2735Compliance=j2735Compliance)
