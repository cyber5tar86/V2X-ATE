# PySNMP SMI module. Autogenerated from smidump -f python AUTOTALKS-T109-MIB
# by libsmi2pysnmp-0.1.3 at Sun Sep 29 09:49:23 2013,
# Python version sys.version_info(major=2, minor=7, micro=3, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( atlkMgmt, ) = mibBuilder.importSymbols("AUTOTALKS-REG", "atlkMgmt")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( MacAddress, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue")

# Objects

t109Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 38405, 1, 2)).setRevisions(("2012-08-12 00:00",))
if mibBuilder.loadTexts: t109Mib.setOrganization("Autotalks")
if mibBuilder.loadTexts: t109Mib.setContactInfo("Grand Netter Building\nPOB 3846, Kfar-Netter 40593, Israel\nPhone: (+972)-9-886-5300\nFax:   (+972)-9-886-5301\ninfo@auto-talks.com")
if mibBuilder.loadTexts: t109Mib.setDescription("Autotalks Ltd. SMIv2 MIB that represents ARIB STD-T109 MIB\nand includes extensions not required by the standard.")
t109Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 2, 1))
t109Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 2, 1, 1))
t109Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 2, 1, 2))
t109Phy = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 2, 2))
t109TxPower = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t109TxPower.setDescription("Default transmit power in mW")
t109TimeCounter = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-999999, 999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t109TimeCounter.setDescription("Corrected value of timer")
t109Mac = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 2, 3))
t109MacAddress = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 2, 3, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t109MacAddress.setDescription("MAC address of station (OBE/RSU)")
t109WirelessCallNumber = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 2, 3, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t109WirelessCallNumber.setDescription("Wireless Call Number")
t109TxTimeFilterEnabled = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 2, 3, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t109TxTimeFilterEnabled.setDescription("Whether dropping of frames that are above the maximum\nallowed transmission time is enabled")
t109IvcRvc = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 2, 4))
t109ObeGuardTime = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t109ObeGuardTime.setDescription("OBE Guard Time (OGT)")

# Augmentions

# Groups

t109V1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 38405, 1, 2, 1, 1, 1)).setObjects(*(("AUTOTALKS-T109-MIB", "t109TxPower"), ("AUTOTALKS-T109-MIB", "t109MacAddress"), ("AUTOTALKS-T109-MIB", "t109ObeGuardTime"), ("AUTOTALKS-T109-MIB", "t109TimeCounter"), ) )
if mibBuilder.loadTexts: t109V1Group.setDescription("MIB objects required by ARIB STD-T109 v1.0")
t109ExtensionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 38405, 1, 2, 1, 1, 2)).setObjects(*(("AUTOTALKS-T109-MIB", "t109WirelessCallNumber"), ("AUTOTALKS-T109-MIB", "t109TxTimeFilterEnabled"), ) )
if mibBuilder.loadTexts: t109ExtensionGroup.setDescription("Non-standard extensions of ARIB STD-T109 MIB")

# Compliances

t109V1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 38405, 1, 2, 1, 2, 1)).setObjects(*(("AUTOTALKS-T109-MIB", "t109ExtensionGroup"), ("AUTOTALKS-T109-MIB", "t109V1Group"), ) )
if mibBuilder.loadTexts: t109V1Compliance.setDescription("Compliance with ARIB STD-T109 v1.0")

# Exports

# Module identity
mibBuilder.exportSymbols("AUTOTALKS-T109-MIB", PYSNMP_MODULE_ID=t109Mib)

# Objects
mibBuilder.exportSymbols("AUTOTALKS-T109-MIB", t109Mib=t109Mib, t109Conformance=t109Conformance, t109Groups=t109Groups, t109Compliances=t109Compliances, t109Phy=t109Phy, t109TxPower=t109TxPower, t109TimeCounter=t109TimeCounter, t109Mac=t109Mac, t109MacAddress=t109MacAddress, t109WirelessCallNumber=t109WirelessCallNumber, t109TxTimeFilterEnabled=t109TxTimeFilterEnabled, t109IvcRvc=t109IvcRvc, t109ObeGuardTime=t109ObeGuardTime)

# Groups
mibBuilder.exportSymbols("AUTOTALKS-T109-MIB", t109V1Group=t109V1Group, t109ExtensionGroup=t109ExtensionGroup)

# Compliances
mibBuilder.exportSymbols("AUTOTALKS-T109-MIB", t109V1Compliance=t109V1Compliance)
