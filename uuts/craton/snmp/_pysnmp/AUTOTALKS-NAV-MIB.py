# PySNMP SMI module. Autogenerated from smidump -f python AUTOTALKS-NAV-MIB
# by libsmi2pysnmp-0.1.3 at Tue Aug  4 15:19:14 2015,
# Python version sys.version_info(major=2, minor=7, micro=6, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( atlkMgmt, ) = mibBuilder.importSymbols("AUTOTALKS-REG", "atlkMgmt")
( ConfigSaveStatus, ) = mibBuilder.importSymbols("AUTOTALKS-TC", "ConfigSaveStatus")
( InetAddressIPv4, InetAddressType, InetPortNumber, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4", "InetAddressType", "InetPortNumber")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue")

# Objects

navMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 38405, 1, 6)).setRevisions(("2015-07-16 00:00","2015-05-05 00:00","2015-05-03 00:00","2015-03-08 00:00","2015-03-04 00:00","2013-04-21 00:00",))
if mibBuilder.loadTexts: navMib.setOrganization("Autotalks")
if mibBuilder.loadTexts: navMib.setContactInfo("Grand Netter Building\nPOB 3846, Kfar-Netter 40593, Israel\nPhone: (+972)-9-886-5300\nFax:   (+972)-9-886-5301\ninfo@auto-talks.com")
if mibBuilder.loadTexts: navMib.setDescription("Navigation MIB.")
navConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 6, 1))
navGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 6, 1, 1))
navCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 6, 1, 2))
navFixAvailable = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navFixAvailable.setDescription("Whether a navigation fix is available (via satellite navigation and/or\nanother method).")
navDataSource = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(0,2,1,)).subtype(namedValues=NamedValues(("gnss", 0), ("gpsd", 1), ("none", 2), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navDataSource.setDescription("Source of navigation data fix.")
navGpsdServerPort = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 4), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navGpsdServerPort.setDescription("Port number used by GPSD server.")
navGpsdServerIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: navGpsdServerIpAddressType.setDescription("Address type used by GPSD server.")
navGpsdServerIpAddressIPv4 = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 6), InetAddressIPv4()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navGpsdServerIpAddressIPv4.setDescription("IPv4 address used by GPSD server.")
navSysTime = MibIdentifier((1, 3, 6, 1, 4, 1, 38405, 1, 6, 7))
navSysTimeUpdateEnabled = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 7, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navSysTimeUpdateEnabled.setDescription("Whether updating system time from navigation fix is enabled.")
navSysTimePpsSyncEnabled = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 7, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navSysTimePpsSyncEnabled.setDescription("Whether syncing system time with external 1-PPS is enabled.")
navSysTimeStatus = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 7, 3), Integer().subtype(subtypeSpec=SingleValueConstraint(0,1,)).subtype(namedValues=NamedValues(("notSet", 0), ("set", 1), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navSysTimeStatus.setDescription("System time status.")
navSysTimeLeapSeconds = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 7, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navSysTimeLeapSeconds.setDescription("Net amount of UTC leap seconds, between 2004-01-01T00:00:00Z and\ncurrent time, which shall be used in conversion between TAI and UTC\ntimes in set/gettimeofday function calls.")
navConfigSaveStatus = MibScalar((1, 3, 6, 1, 4, 1, 38405, 1, 6, 8), ConfigSaveStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: navConfigSaveStatus.setDescription("NAV configuration save status.")

# Augmentions

# Groups

navMibGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 38405, 1, 6, 1, 1, 1)).setObjects(*(("AUTOTALKS-NAV-MIB", "navSysTimePpsSyncEnabled"), ("AUTOTALKS-NAV-MIB", "navSysTimeStatus"), ("AUTOTALKS-NAV-MIB", "navGpsdServerIpAddressIPv4"), ("AUTOTALKS-NAV-MIB", "navDataSource"), ("AUTOTALKS-NAV-MIB", "navConfigSaveStatus"), ("AUTOTALKS-NAV-MIB", "navSysTimeLeapSeconds"), ("AUTOTALKS-NAV-MIB", "navGpsdServerIpAddressType"), ("AUTOTALKS-NAV-MIB", "navGpsdServerPort"), ("AUTOTALKS-NAV-MIB", "navFixAvailable"), ("AUTOTALKS-NAV-MIB", "navSysTimeUpdateEnabled"), ) )
if mibBuilder.loadTexts: navMibGroup.setDescription("All objects in AUTOTALKS-NAV-MIB")

# Compliances

navCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 38405, 1, 6, 1, 2, 1)).setObjects(*(("AUTOTALKS-NAV-MIB", "navMibGroup"), ) )
if mibBuilder.loadTexts: navCompliance.setDescription("Compliance statement covering entire AUTOTALKS-NAV-MIB")

# Exports

# Module identity
mibBuilder.exportSymbols("AUTOTALKS-NAV-MIB", PYSNMP_MODULE_ID=navMib)

# Objects
mibBuilder.exportSymbols("AUTOTALKS-NAV-MIB", navMib=navMib, navConformance=navConformance, navGroups=navGroups, navCompliances=navCompliances, navFixAvailable=navFixAvailable, navDataSource=navDataSource, navGpsdServerPort=navGpsdServerPort, navGpsdServerIpAddressType=navGpsdServerIpAddressType, navGpsdServerIpAddressIPv4=navGpsdServerIpAddressIPv4, navSysTime=navSysTime, navSysTimeUpdateEnabled=navSysTimeUpdateEnabled, navSysTimePpsSyncEnabled=navSysTimePpsSyncEnabled, navSysTimeStatus=navSysTimeStatus, navSysTimeLeapSeconds=navSysTimeLeapSeconds, navConfigSaveStatus=navConfigSaveStatus)

# Groups
mibBuilder.exportSymbols("AUTOTALKS-NAV-MIB", navMibGroup=navMibGroup)

# Compliances
mibBuilder.exportSymbols("AUTOTALKS-NAV-MIB", navCompliance=navCompliance)
